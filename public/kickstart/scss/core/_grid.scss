// Still playing with this
// $mobile: (
//   default: 360px,
//   large: 480px,
//   larger: 600px,
//   largest: 768px
// )

// $display: (
//   smallest: 960px,
//   smaller: 1024px,
//   small: 1200px,
//   default: 1400px
// )

$phone: 360px;
$phablet: 480px;
$tablet: 768px;
$tablet-landscape: 960px;
$desktop: 1024px;
$large-monitor: 1200px;
$xl-monitor: 1400px;
$xxl-monitor: 1800px;

// Media query generator
@mixin gt($query: $phone) {
  @media screen and (min-width: $query) {
    @content;
  }
}

$grid-columns: 12;
$grid-gutter: 15px;

// Grid breakpoints
// ----------------
// Critical breakpoints where offsets and alternative grid styles will
// be displayed

$showOffsets: $tablet-landscape;
$showColumns: $phablet;
$showPartialColumns: $tablet;
$showFullColumns: $desktop;

@mixin wrapper-default($fluid: false) {
  margin: 0px auto;

  @if $fluid == false {
    max-width: $tablet;
  }

  padding: {
    left: $space;
    right: $space;
  };

  @if $fluid == false {
    @media screen and (min-width: $showOffsets) {
      max-width: $desktop;
    }

    @media screen and (min-width: $xxl-monitor) {
      max-width: $large-monitor;
    }
  }
}

@mixin row {
  display: inline-flex;
  width: calc(100% + #{$grid-gutter});
  justify-content: flex-start;
  align-items: stretch;
  flex-wrap: wrap;
  margin: {
    left: -$grid-gutter / 2;
    right: -$grid-gutter / 2;
  };
}

@mixin column-universals {
  // For smaller CSS, this can be applied in one rule, rather
  // than in a loop for every type of column.
  clear: none;
  display: block;
  margin: {
    left: $grid-gutter / 2;
    right: $grid-gutter / 2;
  };
}

@mixin measure-columns($columns, $prop) {
  // TODO: DRY this somehow?
  @if $prop == "width" {
    width: calc(#{percentage($columns / $grid-columns)} - #{$grid-gutter});
  }
  @else if $prop == "margin-left" {
    margin-left: calc(#{percentage($columns / $grid-columns)} + #{$grid-gutter / 2});
  }
  @else if $prop == "margin-right" {
    margin-right: calc(#{percentage($columns / $grid-columns)} - #{($grid-columns / $columns - 1) * $grid-gutter / ($grid-columns / $columns) - $grid-gutter});
  }
}

@mixin set-offset($columns, $side: "margin-right") {
  // Never show leftes and rights on mobile
  // +measure-columns(0, $side)

  // Look for keywords
  @if $columns == "half" {
    @media screen and (min-width: $showPartialColumns) {
      @include measure-columns(6, $side);
    }
  }
  @else if $columns == "third" {
    @media screen and (min-width: $showPartialColumns) {
      @include measure-columns(6, $side);
    }

    @media screen and (min-width: $showFullColumns) {
      @include measure-columns(4, $side);
    }
  }
  @else if $columns == "twothirds" {
    @media screen and (min-width: $showPartialColumns) {
      @include measure-columns(6, $side);
    }

    @media screen and (min-width: $showFullColumns) {
      @include measure-columns(8, $side);
    }
  }
  @else {
    @media screen and (min-width: $showPartialColumns) {
      @include measure-columns($columns, $side);
    }
  }
}

// Convenience mixins
@mixin right($columns) {
  @include set-offset($columns, "margin-right");
}

@mixin left($columns) {
  @include set-offset($columns, "margin-left");
}

@mixin set-column($columns, $left, $right) {
  @include measure-columns($columns, "width");

  @if $right != 0 {
    @include set-offset($right, "margin-right");
  }

  @if $left != 0 {
    @include set-offset($left, "margin-left");
  }
}

@mixin column($columns: 12, $left: 0, $right: 0, $constants: true) {
  // Everything is a full width column on mobile by default
  @include set-column(12, 0, 0);

  @if $constants == true {
    @include column-universals;
  }

  // Look for keywords
  @if $columns == "half" {
    @media screen and (min-width: $showPartialColumns) {
      @include set-column($grid-columns / 2, $left, $right);
    }
  }
  @else if $columns == "third" {
    @media screen and (min-width: $showPartialColumns) {
      @include set-column($grid-columns / 2, $left, $right);
    }

    @media screen and (min-width: $showFullColumns) {
      @include set-column($grid-columns / 3, $left, $right);
    }
  }
  @else if $columns == "twothirds" {
    @media screen and (min-width: $showPartialColumns) {
      @include set-column($grid-columns / 2, $left, $right);
    }

    @media screen and (min-width: $showFullColumns) {
      @include set-column($grid-columns * 2 / 3, $left, $right);
    }
  }
  @else {
    // No keywords found, pass in values.
    @media screen and (min-width: $showColumns) {
      @include set-column($columns, $left, $right);
    }
  }
}
